<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.knime.credentials.base" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.knime.credentials.base" id="org.knime.credentials.base.CredentialType" name="CredentialType"/>
      </appInfo>
      <documentation>
         An extension point to register credential types for the Credential port object.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="credentialType"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="credentialType">
      <annotation>
         <documentation>
            Registeres a custom credential type including its serializers.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The unique ID of this credential type.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Human readable name for this credential type.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="credentialClass" type="string" use="required">
            <annotation>
               <documentation>
                  The class used to hold instances of this credential type.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.knime.credentials.base.Credential"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="credentialSerializerClass" type="string" use="required">
            <annotation>
               <documentation>
                  The class used to (de)serialize instances of this credential type.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.knime.credentials.base.CredentialSerializer"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="secretConsumableParserProvider" type="string">
            <annotation>
               <documentation>
                  Secret Store is a service in KNIME Business Hub 1.8+, that provides credential management for KNIME workflows. The Secret Retriever node  fetches secret (consumables) from Secret Store , and turns each consumable into a Credential. Every Credential type can provide one or more parsers, to parse a consumable into a Credential. The Secret Retriever node picks the parser that declares the secret type mentioned in the consumable.

Added with AP 5.2.1.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.knime.credentials.base.secretstore.SecretConsumableParserProvider:"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
