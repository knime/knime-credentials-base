{
  "data" : {
    "model" : {
      "serviceType" : "STANDARD",
      "customService" : {
        "tokenRequestMethod" : "POST",
        "clientAuthMechanism" : "HTTP_BASIC_AUTH",
        "usePKCE" : false
      },
      "appType" : "PUBLIC",
      "publicApp" : { },
      "confidentialApp" : { },
      "redirectUrl" : "http://localhost:43769",
      "scopes" : {
        "scopes" : [ ]
      }
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "appType" : {
            "oneOf" : [ {
              "const" : "PUBLIC",
              "title" : "Public"
            }, {
              "const" : "CONFIDENTIAL",
              "title" : "Confidential"
            } ],
            "title" : "Type",
            "description" : "Whether a public or confidential application flow should be used.\nA confidential application requires a secret.\n",
            "default" : "PUBLIC"
          },
          "confidentialApp" : {
            "type" : "object",
            "properties" : {
              "flowVariable" : {
                "type" : "string",
                "title" : "ID and Secret (flow variable)",
                "description" : "Specifies the credentials flow variable with the client/app ID and secret to use."
              }
            },
            "default" : { }
          },
          "customService" : {
            "type" : "object",
            "properties" : {
              "authorizationUrl" : {
                "type" : "string",
                "title" : "Authorization endpoint URL",
                "description" : "The authorization endpoint URL of the OAuth service."
              },
              "clientAuthMechanism" : {
                "oneOf" : [ {
                  "const" : "HTTP_BASIC_AUTH",
                  "title" : "HTTP Basic Auth"
                }, {
                  "const" : "REQUEST_BODY",
                  "title" : "Request Body"
                } ],
                "title" : "Client/App authentication method",
                "description" : "How to transfer Client/App ID and secret to the service endpoints. HTTP Basic Auth is the\nmost common mechanism, but some services expect these values to be part of the form-encoded\nrequest body.\n",
                "default" : "HTTP_BASIC_AUTH"
              },
              "tokenRequestMethod" : {
                "oneOf" : [ {
                  "const" : "POST",
                  "title" : "POST"
                }, {
                  "const" : "GET",
                  "title" : "GET"
                } ],
                "title" : "Token endpoint request method",
                "description" : "HTTP method to use when requesting the access token from the token endpoint.",
                "default" : "POST"
              },
              "tokenUrl" : {
                "type" : "string",
                "title" : "Token endpoint URL",
                "description" : "The token endpoint URL of the OAuth2 service."
              },
              "usePKCE" : {
                "type" : "boolean",
                "title" : "Use PKCE",
                "description" : "Enables Proof Key for Code Exchange (PKCE), to improve security of the interactive login.\n",
                "default" : false
              }
            },
            "default" : {
              "tokenRequestMethod" : "POST",
              "clientAuthMechanism" : "HTTP_BASIC_AUTH",
              "usePKCE" : false
            }
          },
          "publicApp" : {
            "type" : "object",
            "properties" : {
              "appId" : {
                "type" : "string",
                "title" : "ID",
                "description" : "The client/application ID. In some services this is called API key."
              }
            },
            "default" : { }
          },
          "redirectUrl" : {
            "type" : "string",
            "title" : "Redirect URL (should be http://localhost:XXXXX)",
            "description" : "The redirect URL to be used at the end of the interactive login. Should be chosen as http://localhost:XXXXX\nwith a random number in the 10000 - 65000 range to avoid conflicts. Often, the redirect URL is part of the\nclient/app registration at the OAuth2 service.\n",
            "default" : "http://localhost:43769"
          },
          "scopes" : {
            "type" : "object",
            "properties" : {
              "scopes" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "scope" : {
                      "type" : "string"
                    }
                  }
                },
                "title" : "Scopes",
                "description" : "The list of scopes to request for the access token.",
                "default" : [ ]
              }
            },
            "default" : {
              "scopes" : [ ]
            }
          },
          "serviceType" : {
            "oneOf" : [ {
              "const" : "STANDARD",
              "title" : "Standard"
            }, {
              "const" : "CUSTOM",
              "title" : "Custom"
            } ],
            "title" : "Service type",
            "description" : "Whether to connect to a standard OAuth service from a predefined list, or\nto manually specify endpoint URLs.",
            "default" : "STANDARD"
          },
          "standardService" : {
            "oneOf" : [ {
              "const" : "ASANA20API",
              "title" : "Asana"
            }, {
              "const" : "AUTOMATICAPI",
              "title" : "Automatic"
            }, {
              "const" : "DATAPORTENAPI",
              "title" : "Dataporten"
            }, {
              "const" : "DISCORDAPI",
              "title" : "Discord"
            }, {
              "const" : "DOKTORNARABOTEAPI",
              "title" : "Doktornarabote"
            }, {
              "const" : "DROPBOXAPI",
              "title" : "Dropbox"
            }, {
              "const" : "FACEBOOKAPI",
              "title" : "Facebook"
            }, {
              "const" : "FITBITAPI20",
              "title" : "Fitbit"
            }, {
              "const" : "FOURSQUARE2API",
              "title" : "Foursquare"
            }, {
              "const" : "GENIUSAPI",
              "title" : "Genius"
            }, {
              "const" : "GITHUBAPI",
              "title" : "GitHub"
            }, {
              "const" : "GOOGLEAPI20",
              "title" : "Google"
            }, {
              "const" : "HHAPI",
              "title" : "HH"
            }, {
              "const" : "HIORGSERVERAPI20",
              "title" : "HiOrg-Server"
            }, {
              "const" : "IMGURAPI",
              "title" : "Imgur"
            }, {
              "const" : "INSTAGRAMAPI",
              "title" : "Instagram"
            }, {
              "const" : "KAIXINAPI20",
              "title" : "Kaixin"
            }, {
              "const" : "KAKAOAPI",
              "title" : "Kakao"
            }, {
              "const" : "KEYCLOAKAPI",
              "title" : "Keycloak"
            }, {
              "const" : "LINKEDINAPI20",
              "title" : "LinkedIn"
            }, {
              "const" : "LIVEAPI",
              "title" : "Microsoft Live"
            }, {
              "const" : "MAILRUAPI",
              "title" : "Mailru"
            }, {
              "const" : "MEETUPAPI20",
              "title" : "Meetup"
            }, {
              "const" : "MICROSOFTAZUREACTIVEDIRECTORY20API",
              "title" : "Microsoft Azure AD v2.0"
            }, {
              "const" : "MICROSOFTAZUREACTIVEDIRECTORYAPI",
              "title" : "Microsoft Azure AD v1.0"
            }, {
              "const" : "MISFITAPI",
              "title" : "Misfit"
            }, {
              "const" : "NAVERAPI",
              "title" : "Naver"
            }, {
              "const" : "ODNOKLASSNIKIAPI",
              "title" : "Odnoklassniki"
            }, {
              "const" : "PINTERESTAPI",
              "title" : "Pinterest"
            }, {
              "const" : "POLARAPI",
              "title" : "Polar"
            }, {
              "const" : "RENRENAPI",
              "title" : "Renren"
            }, {
              "const" : "SALESFORCEAPI",
              "title" : "Salesforce"
            }, {
              "const" : "SINAWEIBOAPI20",
              "title" : "SinaWeibo"
            }, {
              "const" : "SLACKAPI",
              "title" : "Slack"
            }, {
              "const" : "STACKEXCHANGEAPI",
              "title" : "StackExchange"
            }, {
              "const" : "THETHINGSNETWORKV1STAGINGAPI",
              "title" : "The Things Network (v1-staging)"
            }, {
              "const" : "THETHINGSNETWORKV2PREVIEWAPI",
              "title" : "The Things Network (v2-preview)"
            }, {
              "const" : "TUTBYAPI",
              "title" : "TutBy"
            }, {
              "const" : "VIADEOAPI",
              "title" : "Viadeo"
            }, {
              "const" : "VKONTAKTEAPI",
              "title" : "Vkontakte"
            }, {
              "const" : "WUNDERLISTAPI",
              "title" : "Wunderlist"
            }, {
              "const" : "XEROAPI20",
              "title" : "Xero"
            }, {
              "const" : "YAHOOAPI20",
              "title" : "Yahoo"
            } ],
            "title" : "Service",
            "description" : "A standard OAuth service from a predefined list."
          },
          "tokenCacheKey" : {
            "type" : "string",
            "format" : "uuid",
            "title" : "Login",
            "description" : "Clicking on login opens a new browser window/tab which allows to interactively log into the service."
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "label" : "Endpoints configuration",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/serviceType",
        "options" : {
          "format" : "valueSwitch"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/standardService",
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/serviceType",
            "schema" : {
              "oneOf" : [ {
                "const" : "STANDARD"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/customService/properties/authorizationUrl",
        "rule" : {
          "effect" : "HIDE",
          "condition" : {
            "scope" : "#/properties/model/properties/serviceType",
            "schema" : {
              "oneOf" : [ {
                "const" : "STANDARD"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/customService/properties/tokenUrl",
        "rule" : {
          "effect" : "HIDE",
          "condition" : {
            "scope" : "#/properties/model/properties/serviceType",
            "schema" : {
              "oneOf" : [ {
                "const" : "STANDARD"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/customService/properties/tokenRequestMethod",
        "options" : {
          "isAdvanced" : true,
          "format" : "valueSwitch"
        },
        "rule" : {
          "effect" : "HIDE",
          "condition" : {
            "scope" : "#/properties/model/properties/serviceType",
            "schema" : {
              "oneOf" : [ {
                "const" : "STANDARD"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/customService/properties/clientAuthMechanism",
        "options" : {
          "isAdvanced" : true,
          "format" : "valueSwitch"
        },
        "rule" : {
          "effect" : "HIDE",
          "condition" : {
            "scope" : "#/properties/model/properties/serviceType",
            "schema" : {
              "oneOf" : [ {
                "const" : "STANDARD"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/customService/properties/usePKCE",
        "options" : {
          "format" : "checkbox",
          "isAdvanced" : true
        },
        "rule" : {
          "effect" : "HIDE",
          "condition" : {
            "scope" : "#/properties/model/properties/serviceType",
            "schema" : {
              "oneOf" : [ {
                "const" : "STANDARD"
              } ]
            }
          }
        }
      } ]
    }, {
      "label" : "Client/App configuration",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/appType",
        "options" : {
          "format" : "valueSwitch"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/publicApp/properties/appId",
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/appType",
            "schema" : {
              "oneOf" : [ {
                "const" : "PUBLIC"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/confidentialApp/properties/flowVariable",
        "options" : {
          "possibleValues" : [ ],
          "format" : "dropDown",
          "showNoneColumn" : false,
          "showRowKeys" : false,
          "showSearch" : true,
          "showMode" : true
        },
        "rule" : {
          "effect" : "HIDE",
          "condition" : {
            "scope" : "#/properties/model/properties/appType",
            "schema" : {
              "oneOf" : [ {
                "const" : "PUBLIC"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/redirectUrl"
      } ]
    }, {
      "label" : "Scopes of access",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/scopes/properties/scopes",
        "options" : {
          "detail" : [ {
            "type" : "Control",
            "scope" : "#/properties/scope"
          } ],
          "addButtonText" : "Add scope"
        }
      } ]
    }, {
      "label" : "",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/tokenCacheKey",
        "options" : {
          "actionHandler" : "org.knime.credentials.base.oauth2.authcode.OAuth2AuthenticatorAuthCodeSettings$LoginActionHandler",
          "format" : "button",
          "states" : [ {
            "id" : "READY",
            "disabled" : false,
            "primary" : true,
            "nextState" : "CANCEL",
            "text" : "Login"
          }, {
            "id" : "CANCEL",
            "disabled" : false,
            "primary" : false,
            "text" : "Cancel login"
          }, {
            "id" : "DONE",
            "disabled" : false,
            "primary" : true,
            "nextState" : "CANCEL",
            "text" : "Login again"
          } ],
          "displayErrorMessage" : true,
          "showTitleAndDescription" : false,
          "dependencies" : [ "#/properties/model/properties/serviceType", "#/properties/model/properties/standardService", "#/properties/model/properties/customService/properties/tokenUrl", "#/properties/model/properties/customService/properties/tokenRequestMethod", "#/properties/model/properties/customService/properties/clientAuthMechanism", "#/properties/model/properties/customService/properties/authorizationUrl", "#/properties/model/properties/customService/properties/usePKCE", "#/properties/model/properties/appType", "#/properties/model/properties/publicApp/properties/appId", "#/properties/model/properties/confidentialApp/properties/flowVariable", "#/properties/model/properties/redirectUrl", "#/properties/model/properties/scopes/properties/scopes" ],
          "updateOptions" : {
            "updateHandler" : "org.knime.credentials.base.oauth2.authcode.OAuth2AuthenticatorAuthCodeSettings$LoginUpdateHandler",
            "dependencies" : [ "#/properties/model/properties/serviceType", "#/properties/model/properties/standardService", "#/properties/model/properties/customService/properties/tokenUrl", "#/properties/model/properties/customService/properties/tokenRequestMethod", "#/properties/model/properties/customService/properties/clientAuthMechanism", "#/properties/model/properties/customService/properties/authorizationUrl", "#/properties/model/properties/customService/properties/usePKCE", "#/properties/model/properties/appType", "#/properties/model/properties/publicApp/properties/appId", "#/properties/model/properties/confidentialApp/properties/flowVariable", "#/properties/model/properties/redirectUrl", "#/properties/model/properties/scopes/properties/scopes" ]
          }
        }
      } ]
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "serviceType" : { },
          "standardService" : { },
          "customService" : {
            "type" : "object",
            "properties" : {
              "tokenUrl" : { },
              "tokenRequestMethod" : { },
              "clientAuthMechanism" : { },
              "authorizationUrl" : { },
              "usePKCE" : { }
            }
          },
          "appType" : { },
          "publicApp" : {
            "type" : "object",
            "properties" : {
              "appId" : { }
            }
          },
          "confidentialApp" : {
            "type" : "object",
            "properties" : {
              "flowVariable" : { }
            }
          },
          "redirectUrl" : { },
          "scopes" : {
            "type" : "object",
            "properties" : {
              "scopes" : { }
            }
          },
          "tokenCacheKey" : {
            "configPaths" : [ ]
          }
        }
      }
    }
  }
}